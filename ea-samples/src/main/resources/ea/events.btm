RULE init entry
CLASS EscapeAnalysisIntraMethodBuilder
METHOD <init>
HELPER org.example.ea.helpers.EventPoet
AT ENTRY
BIND
  name = $2.getCurrentElement().toString();
IF
  name.toString().contains("org/example/ea/samples.EASample_01_Basic.sample1")
DO
  link("name", name);
  create(name);
ENDRULE

#RULE parameter
#CLASS org.qbicc.graph.DelegatingBasicBlockBuilder
#METHOD parameter
#AT EXIT
##BIND
##  isIntra = org.qbicc.plugin.opt.ea.EscapeAnalysisIntraMethodBuilder.class.isInstance($this);
##  intra : org.qbicc.plugin.opt.ea.EscapeAnalysisIntraMethodBuilder = (isIntra ? $this : null);
##  name = linked("name");
#IF
##  isIntra
#  TRUE
#DO
#  traceln("Called parameter on " + $this.getClass().toString());
#ENDRULE

RULE start method
CLASS EscapeAnalysisIntraMethodBuilder
METHOD startMethod
HELPER org.example.ea.helpers.EventPoet
AT ENTRY
BIND
  name = linked("name");
  th = Thread.currentThread();
  prefix = "(" + th.getName() + ") ";
  parameter : org.qbicc.graph.ParameterValue = $1.stream().findFirst().orElse(null);
IF
  $this.connectionGraph.name.equals(name)
DO
  # traceln(prefix.toString() + "startMethod called with: " + $1.toString() + " which has valueType " + parameter.type.toString());
  startMethod($1);
ENDRULE

RULE finish
CLASS EscapeAnalysisIntraMethodBuilder
METHOD finish
HELPER org.example.ea.helpers.EventPoet
AT ENTRY
BIND
  name = linked("name");
IF
  $this.connectionGraph.name.equals(name)
DO
  finish();
ENDRULE
